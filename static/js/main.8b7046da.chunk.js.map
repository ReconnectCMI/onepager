{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","className","size","xs","lg","p","bg","textAlign","tag","textSize","m","b","placeholder","x","prefix","name","color","cursor","pos","top","left","transform","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","engine","Styletron","ReactDOM","render","value","debug","debugAfterHydration","theme","colors","primary","accent","document","getElementById"],"mappings":"2MAoDeA,MA3Bf,WACE,OACE,cAAC,YAAD,CAAWC,UAAU,MAArB,SACE,eAAC,MAAD,WACE,cAAC,MAAD,CAAKC,KAAM,CAAEC,GAAI,GAAIC,GAAI,GAAzB,SACE,cAAC,MAAD,CAAKC,EAAE,OAAOC,GAAG,aAAjB,uBAIF,cAAC,MAAD,CAAKJ,KAAM,CAAEC,GAAI,GAAIC,GAAI,IAAzB,SACE,eAAC,MAAD,CAAKC,EAAE,OAAOC,GAAG,UAAjB,UACE,cAAC,OAAD,CAAMC,UAAU,SAASC,IAAI,KAAKC,SAAS,WAAWC,EAAG,CAAEC,EAAG,QAA9D,2BA9BR,cAAC,QAAD,CACEC,YAAY,kBACZP,EAAG,CAAEQ,EAAG,UACRC,OACE,cAAC,OAAD,CACEC,KAAK,YACLC,MAAM,aACNd,KAAK,OACLe,OAAO,UACPC,IAAI,WACJC,IAAI,MACJC,KAAK,UACLC,UAAU,4BAwBZ,cAAC,MAAD,CAAKnB,KAAM,CAAEC,GAAI,GAAIC,GAAI,GAAzB,SACE,cAAC,MAAD,CAAKC,EAAE,OAAOC,GAAG,aAAjB,6BC/BKgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCKRQ,EAAS,I,MAAIC,GASnBC,IAASC,OACP,cAAC,WAAD,CAAmBC,MAAOJ,EAAQK,MAbkB,UAaJC,qBAAmB,EAAnE,SACE,eAAC,gBAAD,CAAeC,MAVL,CACZC,OAAQ,CACNC,QAAS,QACTC,OAAQ,eAOR,UACE,cAAC,aAAD,IACA,cAAC,EAAD,SAGJC,SAASC,eAAe,SAM1BrB,M","file":"static/js/main.8b7046da.chunk.js","sourcesContent":["import './App.css';\nimport { Row, Col, Div, Container, Text, Input, Icon } from \"atomize\";\nimport React from 'react';\n\nconst InputName = () => {\n  return (\n    <Input\n      placeholder=\"Wat is je naam?\"\n      p={{ x: \"2.5rem\" }}\n      prefix={\n        <Icon\n          name=\"UserSolid\"\n          color=\"success700\"\n          size=\"20px\"\n          cursor=\"pointer\"\n          pos=\"absolute\"\n          top=\"50%\"\n          left=\"0.75rem\"\n          transform=\"translateY(-50%)\"\n        />\n      }\n    />\n  );\n}\n\nfunction App() {\n  return (\n    <Container className=\"App\">\n      <Row>\n        <Col size={{ xs: 12, lg: 1 }}>\n          <Div p=\"1rem\" bg=\"success700\">\n            1 of 12\n          </Div>\n        </Col>\n        <Col size={{ xs: 12, lg: 10 }}>\n          <Div p=\"1rem\" bg=\"gray100\">\n            <Text textAlign=\"center\" tag=\"h1\" textSize=\"display1\" m={{ b: \"4rem\" }}>\n              Reconnecttttt\n            </Text>\n            {InputName()}\n          </Div>\n        </Col>\n        <Col size={{ xs: 12, lg: 1 }}>\n          <Div p=\"1rem\" bg=\"success700\">\n            1 of 12\n          </Div>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider as StyletronProvider, DebugEngine } from \"styletron-react\";\nimport { Client as Styletron } from \"styletron-engine-atomic\";\nimport { StyleReset, ThemeProvider } from 'atomize';\n\nconst debug = process.env.NODE_ENV === \"production\" ? void 0 : new DebugEngine();\n\n// Create client engine instance\nconst engine = new Styletron();\nconst theme = {\n  colors: {\n    primary: 'tgrff',\n    accent: 'success700',\n  },\n};\n\n// Provide the engine to the app (debug engine needs inlined source maps)\nReactDOM.render(\n  <StyletronProvider value={engine} debug={debug} debugAfterHydration>\n    <ThemeProvider theme={theme}>\n      <StyleReset />\n      <App />\n    </ThemeProvider>\n  </StyletronProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}